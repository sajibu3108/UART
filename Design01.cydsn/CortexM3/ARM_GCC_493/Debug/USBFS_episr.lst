ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 "Generated_Source\\PSoC5\\USBFS_episr.c"
   1:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBFS_episr.c **** *
   5:Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBFS_episr.c **** *
   8:Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBFS_episr.c **** 
  16:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBFS_episr.c **** 
  20:Generated_Source\PSoC5/USBFS_episr.c **** 
  21:Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBFS_episr.c **** 
  26:Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBFS_episr.c **** 
  28:Generated_Source\PSoC5/USBFS_episr.c **** 
  29:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 2


  32:Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBFS_episr.c **** 
  40:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBFS_episr.c **** 
  44:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBFS_episr.c **** 
  46:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBFS_episr.c **** 
  48:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBFS_episr.c ****     
  55:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  32              		.loc 1 55 0
  33 0000 0122     		movs	r2, #1
  34 0002 094B     		ldr	r3, .L3
  35 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBFS_episr.c ****             
  57:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  36              		.loc 1 66 0
  37 0006 0F3B     		subs	r3, r3, #15
  38 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBFS_episr.c ****             
  68:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  39              		.loc 1 69 0
  40 000a 084B     		ldr	r3, .L3+4
  41 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  42 000e 03F00303 		and	r3, r3, #3
  43 0012 9342     		cmp	r3, r2
  44 0014 04D0     		beq	.L2
  70:Generated_Source\PSoC5/USBFS_episr.c ****             {
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 3


  71:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0016 054A     		ldr	r2, .L3+4
  47 0018 D37B     		ldrb	r3, [r2, #15]	@ zero_extendqisi2
  48 001a 83F08003 		eor	r3, r3, #128
  49 001e D373     		strb	r3, [r2, #15]
  50              	.L2:
  72:Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:Generated_Source\PSoC5/USBFS_episr.c **** 
  74:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  51              		.loc 1 80 0
  52 0020 0122     		movs	r2, #1
  53 0022 024B     		ldr	r3, .L3+4
  54 0024 5A73     		strb	r2, [r3, #13]
  55 0026 7047     		bx	lr
  56              	.L4:
  57              		.align	2
  58              	.L3:
  59 0028 0B600040 		.word	1073766411
  60 002c 00000000 		.word	USBFS_EP
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  64              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
  65              		.align	2
  66              		.global	USBFS_BUS_RESET_ISR
  67              		.thumb
  68              		.thumb_func
  69              		.type	USBFS_BUS_RESET_ISR, %function
  70              	USBFS_BUS_RESET_ISR:
  71              	.LFB1:
  81:Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:Generated_Source\PSoC5/USBFS_episr.c **** 
  83:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBFS_episr.c ****     
  93:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBFS_episr.c **** 
  95:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBFS_episr.c **** 
  97:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 4


 101:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:Generated_Source\PSoC5/USBFS_episr.c ****         
 104:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBFS_episr.c ****     }
 108:Generated_Source\PSoC5/USBFS_episr.c **** 
 109:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBFS_episr.c **** 
 111:Generated_Source\PSoC5/USBFS_episr.c **** 
 112:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:Generated_Source\PSoC5/USBFS_episr.c ****     {
 122:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBFS_episr.c **** 
 126:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBFS_episr.c **** 
 128:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBFS_episr.c **** 
 130:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBFS_episr.c **** 
 137:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
 138:Generated_Source\PSoC5/USBFS_episr.c **** 
 139:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
 149:Generated_Source\PSoC5/USBFS_episr.c ****             
 150:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
 152:Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 154:Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:Generated_Source\PSoC5/USBFS_episr.c **** 
 156:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 5


 158:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 163:Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:Generated_Source\PSoC5/USBFS_episr.c **** 
 165:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBFS_episr.c ****     
 175:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBFS_episr.c **** 
 177:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBFS_episr.c **** 
 179:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBFS_episr.c **** 
 183:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBFS_episr.c ****         
 186:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBFS_episr.c **** 
 192:Generated_Source\PSoC5/USBFS_episr.c **** 
 193:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBFS_episr.c **** 
 207:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBFS_episr.c **** 
 209:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBFS_episr.c **** 
 211:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 6


 215:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBFS_episr.c **** 
 218:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:Generated_Source\PSoC5/USBFS_episr.c **** 
 220:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:Generated_Source\PSoC5/USBFS_episr.c **** 
 231:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:Generated_Source\PSoC5/USBFS_episr.c **** 
 237:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:Generated_Source\PSoC5/USBFS_episr.c **** 
 246:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
 250:Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBFS_episr.c **** 
 256:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBFS_episr.c **** 
 258:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBFS_episr.c **** 
 260:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBFS_episr.c **** 
 264:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBFS_episr.c ****         
 267:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 7


 272:Generated_Source\PSoC5/USBFS_episr.c **** 
 273:Generated_Source\PSoC5/USBFS_episr.c **** 
 274:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBFS_episr.c **** 
 288:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBFS_episr.c **** 
 290:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBFS_episr.c **** 
 292:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBFS_episr.c **** 
 299:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBFS_episr.c ****         
 301:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
 307:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:Generated_Source\PSoC5/USBFS_episr.c **** 
 312:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:Generated_Source\PSoC5/USBFS_episr.c **** 
 318:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:Generated_Source\PSoC5/USBFS_episr.c **** 
 327:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 8


 329:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBFS_episr.c **** 
 337:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBFS_episr.c **** 
 339:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBFS_episr.c **** 
 341:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBFS_episr.c **** 
 345:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBFS_episr.c ****         
 348:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBFS_episr.c **** 
 354:Generated_Source\PSoC5/USBFS_episr.c **** 
 355:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBFS_episr.c **** 
 370:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBFS_episr.c **** 
 372:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBFS_episr.c **** 
 374:Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBFS_episr.c **** 
 381:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBFS_episr.c ****     
 383:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 9


 386:Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:Generated_Source\PSoC5/USBFS_episr.c **** 
 394:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:Generated_Source\PSoC5/USBFS_episr.c **** 
 400:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:Generated_Source\PSoC5/USBFS_episr.c **** 
 409:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:Generated_Source\PSoC5/USBFS_episr.c **** 
 419:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBFS_episr.c **** 
 421:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBFS_episr.c **** 
 423:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBFS_episr.c **** 
 427:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBFS_episr.c ****         
 430:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBFS_episr.c **** 
 436:Generated_Source\PSoC5/USBFS_episr.c **** 
 437:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 10


 443:Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:Generated_Source\PSoC5/USBFS_episr.c ****     {
 448:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBFS_episr.c **** 
 452:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBFS_episr.c **** 
 454:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBFS_episr.c **** 
 456:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBFS_episr.c **** 
 463:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBFS_episr.c ****         
 465:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 475:Generated_Source\PSoC5/USBFS_episr.c **** 
 476:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:Generated_Source\PSoC5/USBFS_episr.c ****             
 482:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:Generated_Source\PSoC5/USBFS_episr.c **** 
 491:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 11


 500:Generated_Source\PSoC5/USBFS_episr.c **** 
 501:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBFS_episr.c **** 
 503:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBFS_episr.c **** 
 505:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBFS_episr.c **** 
 509:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBFS_episr.c ****         
 512:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBFS_episr.c ****     }
 516:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBFS_episr.c **** 
 518:Generated_Source\PSoC5/USBFS_episr.c **** 
 519:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBFS_episr.c **** 
 534:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBFS_episr.c **** 
 536:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBFS_episr.c **** 
 538:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBFS_episr.c ****     
 545:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBFS_episr.c ****         
 547:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 12


 557:Generated_Source\PSoC5/USBFS_episr.c **** 
 558:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:Generated_Source\PSoC5/USBFS_episr.c ****             
 564:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:Generated_Source\PSoC5/USBFS_episr.c **** 
 573:Generated_Source\PSoC5/USBFS_episr.c **** 
 574:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBFS_episr.c **** 
 584:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBFS_episr.c **** 
 586:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBFS_episr.c **** 
 588:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBFS_episr.c **** 
 592:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBFS_episr.c ****         
 595:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBFS_episr.c **** 
 601:Generated_Source\PSoC5/USBFS_episr.c **** 
 602:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 13


 614:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBFS_episr.c **** 
 617:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBFS_episr.c **** 
 619:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBFS_episr.c **** 
 621:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBFS_episr.c **** 
 628:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBFS_episr.c ****         
 630:Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:Generated_Source\PSoC5/USBFS_episr.c **** 
 641:Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:Generated_Source\PSoC5/USBFS_episr.c **** 
 647:Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:Generated_Source\PSoC5/USBFS_episr.c **** 
 656:Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBFS_episr.c **** 
 666:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBFS_episr.c **** 
 668:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBFS_episr.c **** 
 670:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 14


 671:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBFS_episr.c **** 
 674:Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBFS_episr.c ****         
 677:Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBFS_episr.c **** 
 683:Generated_Source\PSoC5/USBFS_episr.c **** 
 684:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:Generated_Source\PSoC5/USBFS_episr.c ****     {
 695:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBFS_episr.c **** 
 699:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBFS_episr.c **** 
 701:Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBFS_episr.c **** 
 703:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBFS_episr.c **** 
 705:Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBFS_episr.c ****     }
 709:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBFS_episr.c **** 
 711:Generated_Source\PSoC5/USBFS_episr.c **** 
 712:Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBFS_episr.c **** *
 717:Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBFS_episr.c **** *
 720:Generated_Source\PSoC5/USBFS_episr.c **** *
 721:Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBFS_episr.c **** {
  72              		.loc 1 723 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 15


  76 0000 08B5     		push	{r3, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
 724:Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBFS_episr.c **** 
 728:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBFS_episr.c **** 
 730:Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBFS_episr.c **** 
 732:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBFS_episr.c **** 
 734:Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
  80              		.loc 1 734 0
  81 0002 FFF7FEFF 		bl	USBFS_ReInitComponent
  82              	.LVL0:
  83 0006 08BD     		pop	{r3, pc}
  84              		.cfi_endproc
  85              	.LFE1:
  86              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
  87              		.text
  88              	.Letext0:
  89              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
  90              		.file 3 "Generated_Source\\PSoC5\\USBFS.h"
  91              		.file 4 "Generated_Source\\PSoC5\\USBFS_pvt.h"
  92              		.section	.debug_info,"",%progbits
  93              	.Ldebug_info0:
  94 0000 0C020000 		.4byte	0x20c
  95 0004 0400     		.2byte	0x4
  96 0006 00000000 		.4byte	.Ldebug_abbrev0
  97 000a 04       		.byte	0x4
  98 000b 01       		.uleb128 0x1
  99 000c 2B010000 		.4byte	.LASF32
 100 0010 01       		.byte	0x1
 101 0011 35000000 		.4byte	.LASF33
 102 0015 20020000 		.4byte	.LASF34
 103 0019 00000000 		.4byte	.Ldebug_ranges0+0
 104 001d 00000000 		.4byte	0
 105 0021 00000000 		.4byte	.Ldebug_line0
 106 0025 02       		.uleb128 0x2
 107 0026 01       		.byte	0x1
 108 0027 06       		.byte	0x6
 109 0028 7A020000 		.4byte	.LASF0
 110 002c 02       		.uleb128 0x2
 111 002d 01       		.byte	0x1
 112 002e 08       		.byte	0x8
 113 002f 9A000000 		.4byte	.LASF1
 114 0033 02       		.uleb128 0x2
 115 0034 02       		.byte	0x2
 116 0035 05       		.byte	0x5
 117 0036 57020000 		.4byte	.LASF2
 118 003a 02       		.uleb128 0x2
 119 003b 02       		.byte	0x2
 120 003c 07       		.byte	0x7
 121 003d 22000000 		.4byte	.LASF3
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 16


 122 0041 02       		.uleb128 0x2
 123 0042 04       		.byte	0x4
 124 0043 05       		.byte	0x5
 125 0044 71020000 		.4byte	.LASF4
 126 0048 02       		.uleb128 0x2
 127 0049 04       		.byte	0x4
 128 004a 07       		.byte	0x7
 129 004b B8000000 		.4byte	.LASF5
 130 004f 02       		.uleb128 0x2
 131 0050 08       		.byte	0x8
 132 0051 05       		.byte	0x5
 133 0052 0D020000 		.4byte	.LASF6
 134 0056 02       		.uleb128 0x2
 135 0057 08       		.byte	0x8
 136 0058 07       		.byte	0x7
 137 0059 C6010000 		.4byte	.LASF7
 138 005d 03       		.uleb128 0x3
 139 005e 04       		.byte	0x4
 140 005f 05       		.byte	0x5
 141 0060 696E7400 		.ascii	"int\000"
 142 0064 02       		.uleb128 0x2
 143 0065 04       		.byte	0x4
 144 0066 07       		.byte	0x7
 145 0067 B9010000 		.4byte	.LASF8
 146 006b 04       		.uleb128 0x4
 147 006c 61020000 		.4byte	.LASF9
 148 0070 02       		.byte	0x2
 149 0071 9201     		.2byte	0x192
 150 0073 2C000000 		.4byte	0x2c
 151 0077 04       		.uleb128 0x4
 152 0078 0F010000 		.4byte	.LASF10
 153 007c 02       		.byte	0x2
 154 007d 9301     		.2byte	0x193
 155 007f 3A000000 		.4byte	0x3a
 156 0083 02       		.uleb128 0x2
 157 0084 04       		.byte	0x4
 158 0085 04       		.byte	0x4
 159 0086 1C000000 		.4byte	.LASF11
 160 008a 02       		.uleb128 0x2
 161 008b 08       		.byte	0x8
 162 008c 04       		.byte	0x4
 163 008d DE000000 		.4byte	.LASF12
 164 0091 02       		.uleb128 0x2
 165 0092 01       		.byte	0x1
 166 0093 08       		.byte	0x8
 167 0094 1B020000 		.4byte	.LASF13
 168 0098 04       		.uleb128 0x4
 169 0099 A8000000 		.4byte	.LASF14
 170 009d 02       		.byte	0x2
 171 009e 3C02     		.2byte	0x23c
 172 00a0 A4000000 		.4byte	0xa4
 173 00a4 05       		.uleb128 0x5
 174 00a5 6B000000 		.4byte	0x6b
 175 00a9 02       		.uleb128 0x2
 176 00aa 04       		.byte	0x4
 177 00ab 07       		.byte	0x7
 178 00ac F6010000 		.4byte	.LASF15
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 17


 179 00b0 06       		.uleb128 0x6
 180 00b1 0C       		.byte	0xc
 181 00b2 03       		.byte	0x3
 182 00b3 88       		.byte	0x88
 183 00b4 25010000 		.4byte	0x125
 184 00b8 07       		.uleb128 0x7
 185 00b9 FF010000 		.4byte	.LASF16
 186 00bd 03       		.byte	0x3
 187 00be 8A       		.byte	0x8a
 188 00bf 6B000000 		.4byte	0x6b
 189 00c3 00       		.byte	0
 190 00c4 07       		.uleb128 0x7
 191 00c5 AD000000 		.4byte	.LASF17
 192 00c9 03       		.byte	0x3
 193 00ca 8B       		.byte	0x8b
 194 00cb 6B000000 		.4byte	0x6b
 195 00cf 01       		.byte	0x1
 196 00d0 07       		.uleb128 0x7
 197 00d1 DD010000 		.4byte	.LASF18
 198 00d5 03       		.byte	0x3
 199 00d6 8C       		.byte	0x8c
 200 00d7 6B000000 		.4byte	0x6b
 201 00db 02       		.byte	0x2
 202 00dc 07       		.uleb128 0x7
 203 00dd 91000000 		.4byte	.LASF19
 204 00e1 03       		.byte	0x3
 205 00e2 8D       		.byte	0x8d
 206 00e3 6B000000 		.4byte	0x6b
 207 00e7 03       		.byte	0x3
 208 00e8 07       		.uleb128 0x7
 209 00e9 CA000000 		.4byte	.LASF20
 210 00ed 03       		.byte	0x3
 211 00ee 8E       		.byte	0x8e
 212 00ef 6B000000 		.4byte	0x6b
 213 00f3 04       		.byte	0x4
 214 00f4 07       		.uleb128 0x7
 215 00f5 06020000 		.4byte	.LASF21
 216 00f9 03       		.byte	0x3
 217 00fa 8F       		.byte	0x8f
 218 00fb 6B000000 		.4byte	0x6b
 219 00ff 05       		.byte	0x5
 220 0100 07       		.uleb128 0x7
 221 0101 F9000000 		.4byte	.LASF22
 222 0105 03       		.byte	0x3
 223 0106 90       		.byte	0x90
 224 0107 77000000 		.4byte	0x77
 225 010b 06       		.byte	0x6
 226 010c 07       		.uleb128 0x7
 227 010d 04010000 		.4byte	.LASF23
 228 0111 03       		.byte	0x3
 229 0112 91       		.byte	0x91
 230 0113 77000000 		.4byte	0x77
 231 0117 08       		.byte	0x8
 232 0118 07       		.uleb128 0x7
 233 0119 67020000 		.4byte	.LASF24
 234 011d 03       		.byte	0x3
 235 011e 92       		.byte	0x92
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 18


 236 011f 6B000000 		.4byte	0x6b
 237 0123 0A       		.byte	0xa
 238 0124 00       		.byte	0
 239 0125 08       		.uleb128 0x8
 240 0126 5A000000 		.4byte	.LASF25
 241 012a 03       		.byte	0x3
 242 012b 93       		.byte	0x93
 243 012c B0000000 		.4byte	0xb0
 244 0130 06       		.uleb128 0x6
 245 0131 10       		.byte	0x10
 246 0132 03       		.byte	0x3
 247 0133 CF       		.byte	0xcf
 248 0134 69010000 		.4byte	0x169
 249 0138 07       		.uleb128 0x7
 250 0139 83000000 		.4byte	.LASF26
 251 013d 03       		.byte	0x3
 252 013e D1       		.byte	0xd1
 253 013f 6B000000 		.4byte	0x6b
 254 0143 00       		.byte	0
 255 0144 07       		.uleb128 0x7
 256 0145 8A000000 		.4byte	.LASF27
 257 0149 03       		.byte	0x3
 258 014a D2       		.byte	0xd2
 259 014b 6B000000 		.4byte	0x6b
 260 014f 01       		.byte	0x1
 261 0150 07       		.uleb128 0x7
 262 0151 16000000 		.4byte	.LASF28
 263 0155 03       		.byte	0x3
 264 0156 D3       		.byte	0xd3
 265 0157 6B000000 		.4byte	0x6b
 266 015b 02       		.byte	0x2
 267 015c 09       		.uleb128 0x9
 268 015d 67617000 		.ascii	"gap\000"
 269 0161 03       		.byte	0x3
 270 0162 D4       		.byte	0xd4
 271 0163 69010000 		.4byte	0x169
 272 0167 03       		.byte	0x3
 273 0168 00       		.byte	0
 274 0169 0A       		.uleb128 0xa
 275 016a 6B000000 		.4byte	0x6b
 276 016e 79010000 		.4byte	0x179
 277 0172 0B       		.uleb128 0xb
 278 0173 A9000000 		.4byte	0xa9
 279 0177 0C       		.byte	0xc
 280 0178 00       		.byte	0
 281 0179 08       		.uleb128 0x8
 282 017a E5000000 		.4byte	.LASF29
 283 017e 03       		.byte	0x3
 284 017f D5       		.byte	0xd5
 285 0180 30010000 		.4byte	0x130
 286 0184 0C       		.uleb128 0xc
 287 0185 90       		.byte	0x90
 288 0186 03       		.byte	0x3
 289 0187 0901     		.2byte	0x109
 290 0189 9B010000 		.4byte	0x19b
 291 018d 0D       		.uleb128 0xd
 292 018e CF000000 		.4byte	.LASF30
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 19


 293 0192 03       		.byte	0x3
 294 0193 0B01     		.2byte	0x10b
 295 0195 9B010000 		.4byte	0x19b
 296 0199 00       		.byte	0
 297 019a 00       		.byte	0
 298 019b 0A       		.uleb128 0xa
 299 019c 79010000 		.4byte	0x179
 300 01a0 AB010000 		.4byte	0x1ab
 301 01a4 0B       		.uleb128 0xb
 302 01a5 A9000000 		.4byte	0xa9
 303 01a9 08       		.byte	0x8
 304 01aa 00       		.byte	0
 305 01ab 04       		.uleb128 0x4
 306 01ac 16010000 		.4byte	.LASF31
 307 01b0 03       		.byte	0x3
 308 01b1 0C01     		.2byte	0x10c
 309 01b3 84010000 		.4byte	0x184
 310 01b7 0E       		.uleb128 0xe
 311 01b8 E7010000 		.4byte	.LASF35
 312 01bc 01       		.byte	0x1
 313 01bd 25       		.byte	0x25
 314 01be 00000000 		.4byte	.LFB0
 315 01c2 30000000 		.4byte	.LFE0-.LFB0
 316 01c6 01       		.uleb128 0x1
 317 01c7 9C       		.byte	0x9c
 318 01c8 0F       		.uleb128 0xf
 319 01c9 6F000000 		.4byte	.LASF36
 320 01cd 01       		.byte	0x1
 321 01ce D202     		.2byte	0x2d2
 322 01d0 00000000 		.4byte	.LFB1
 323 01d4 08000000 		.4byte	.LFE1-.LFB1
 324 01d8 01       		.uleb128 0x1
 325 01d9 9C       		.byte	0x9c
 326 01da E8010000 		.4byte	0x1e8
 327 01de 10       		.uleb128 0x10
 328 01df 06000000 		.4byte	.LVL0
 329 01e3 08020000 		.4byte	0x208
 330 01e7 00       		.byte	0
 331 01e8 0A       		.uleb128 0xa
 332 01e9 25010000 		.4byte	0x125
 333 01ed F8010000 		.4byte	0x1f8
 334 01f1 0B       		.uleb128 0xb
 335 01f2 A9000000 		.4byte	0xa9
 336 01f6 08       		.byte	0x8
 337 01f7 00       		.byte	0
 338 01f8 11       		.uleb128 0x11
 339 01f9 D5000000 		.4byte	.LASF37
 340 01fd 04       		.byte	0x4
 341 01fe 77       		.byte	0x77
 342 01ff 03020000 		.4byte	0x203
 343 0203 05       		.uleb128 0x5
 344 0204 E8010000 		.4byte	0x1e8
 345 0208 12       		.uleb128 0x12
 346 0209 00000000 		.4byte	.LASF38
 347 020d 04       		.byte	0x4
 348 020e A2       		.byte	0xa2
 349 020f 00       		.byte	0
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 20


 350              		.section	.debug_abbrev,"",%progbits
 351              	.Ldebug_abbrev0:
 352 0000 01       		.uleb128 0x1
 353 0001 11       		.uleb128 0x11
 354 0002 01       		.byte	0x1
 355 0003 25       		.uleb128 0x25
 356 0004 0E       		.uleb128 0xe
 357 0005 13       		.uleb128 0x13
 358 0006 0B       		.uleb128 0xb
 359 0007 03       		.uleb128 0x3
 360 0008 0E       		.uleb128 0xe
 361 0009 1B       		.uleb128 0x1b
 362 000a 0E       		.uleb128 0xe
 363 000b 55       		.uleb128 0x55
 364 000c 17       		.uleb128 0x17
 365 000d 11       		.uleb128 0x11
 366 000e 01       		.uleb128 0x1
 367 000f 10       		.uleb128 0x10
 368 0010 17       		.uleb128 0x17
 369 0011 00       		.byte	0
 370 0012 00       		.byte	0
 371 0013 02       		.uleb128 0x2
 372 0014 24       		.uleb128 0x24
 373 0015 00       		.byte	0
 374 0016 0B       		.uleb128 0xb
 375 0017 0B       		.uleb128 0xb
 376 0018 3E       		.uleb128 0x3e
 377 0019 0B       		.uleb128 0xb
 378 001a 03       		.uleb128 0x3
 379 001b 0E       		.uleb128 0xe
 380 001c 00       		.byte	0
 381 001d 00       		.byte	0
 382 001e 03       		.uleb128 0x3
 383 001f 24       		.uleb128 0x24
 384 0020 00       		.byte	0
 385 0021 0B       		.uleb128 0xb
 386 0022 0B       		.uleb128 0xb
 387 0023 3E       		.uleb128 0x3e
 388 0024 0B       		.uleb128 0xb
 389 0025 03       		.uleb128 0x3
 390 0026 08       		.uleb128 0x8
 391 0027 00       		.byte	0
 392 0028 00       		.byte	0
 393 0029 04       		.uleb128 0x4
 394 002a 16       		.uleb128 0x16
 395 002b 00       		.byte	0
 396 002c 03       		.uleb128 0x3
 397 002d 0E       		.uleb128 0xe
 398 002e 3A       		.uleb128 0x3a
 399 002f 0B       		.uleb128 0xb
 400 0030 3B       		.uleb128 0x3b
 401 0031 05       		.uleb128 0x5
 402 0032 49       		.uleb128 0x49
 403 0033 13       		.uleb128 0x13
 404 0034 00       		.byte	0
 405 0035 00       		.byte	0
 406 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 21


 407 0037 35       		.uleb128 0x35
 408 0038 00       		.byte	0
 409 0039 49       		.uleb128 0x49
 410 003a 13       		.uleb128 0x13
 411 003b 00       		.byte	0
 412 003c 00       		.byte	0
 413 003d 06       		.uleb128 0x6
 414 003e 13       		.uleb128 0x13
 415 003f 01       		.byte	0x1
 416 0040 0B       		.uleb128 0xb
 417 0041 0B       		.uleb128 0xb
 418 0042 3A       		.uleb128 0x3a
 419 0043 0B       		.uleb128 0xb
 420 0044 3B       		.uleb128 0x3b
 421 0045 0B       		.uleb128 0xb
 422 0046 01       		.uleb128 0x1
 423 0047 13       		.uleb128 0x13
 424 0048 00       		.byte	0
 425 0049 00       		.byte	0
 426 004a 07       		.uleb128 0x7
 427 004b 0D       		.uleb128 0xd
 428 004c 00       		.byte	0
 429 004d 03       		.uleb128 0x3
 430 004e 0E       		.uleb128 0xe
 431 004f 3A       		.uleb128 0x3a
 432 0050 0B       		.uleb128 0xb
 433 0051 3B       		.uleb128 0x3b
 434 0052 0B       		.uleb128 0xb
 435 0053 49       		.uleb128 0x49
 436 0054 13       		.uleb128 0x13
 437 0055 38       		.uleb128 0x38
 438 0056 0B       		.uleb128 0xb
 439 0057 00       		.byte	0
 440 0058 00       		.byte	0
 441 0059 08       		.uleb128 0x8
 442 005a 16       		.uleb128 0x16
 443 005b 00       		.byte	0
 444 005c 03       		.uleb128 0x3
 445 005d 0E       		.uleb128 0xe
 446 005e 3A       		.uleb128 0x3a
 447 005f 0B       		.uleb128 0xb
 448 0060 3B       		.uleb128 0x3b
 449 0061 0B       		.uleb128 0xb
 450 0062 49       		.uleb128 0x49
 451 0063 13       		.uleb128 0x13
 452 0064 00       		.byte	0
 453 0065 00       		.byte	0
 454 0066 09       		.uleb128 0x9
 455 0067 0D       		.uleb128 0xd
 456 0068 00       		.byte	0
 457 0069 03       		.uleb128 0x3
 458 006a 08       		.uleb128 0x8
 459 006b 3A       		.uleb128 0x3a
 460 006c 0B       		.uleb128 0xb
 461 006d 3B       		.uleb128 0x3b
 462 006e 0B       		.uleb128 0xb
 463 006f 49       		.uleb128 0x49
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 22


 464 0070 13       		.uleb128 0x13
 465 0071 38       		.uleb128 0x38
 466 0072 0B       		.uleb128 0xb
 467 0073 00       		.byte	0
 468 0074 00       		.byte	0
 469 0075 0A       		.uleb128 0xa
 470 0076 01       		.uleb128 0x1
 471 0077 01       		.byte	0x1
 472 0078 49       		.uleb128 0x49
 473 0079 13       		.uleb128 0x13
 474 007a 01       		.uleb128 0x1
 475 007b 13       		.uleb128 0x13
 476 007c 00       		.byte	0
 477 007d 00       		.byte	0
 478 007e 0B       		.uleb128 0xb
 479 007f 21       		.uleb128 0x21
 480 0080 00       		.byte	0
 481 0081 49       		.uleb128 0x49
 482 0082 13       		.uleb128 0x13
 483 0083 2F       		.uleb128 0x2f
 484 0084 0B       		.uleb128 0xb
 485 0085 00       		.byte	0
 486 0086 00       		.byte	0
 487 0087 0C       		.uleb128 0xc
 488 0088 13       		.uleb128 0x13
 489 0089 01       		.byte	0x1
 490 008a 0B       		.uleb128 0xb
 491 008b 0B       		.uleb128 0xb
 492 008c 3A       		.uleb128 0x3a
 493 008d 0B       		.uleb128 0xb
 494 008e 3B       		.uleb128 0x3b
 495 008f 05       		.uleb128 0x5
 496 0090 01       		.uleb128 0x1
 497 0091 13       		.uleb128 0x13
 498 0092 00       		.byte	0
 499 0093 00       		.byte	0
 500 0094 0D       		.uleb128 0xd
 501 0095 0D       		.uleb128 0xd
 502 0096 00       		.byte	0
 503 0097 03       		.uleb128 0x3
 504 0098 0E       		.uleb128 0xe
 505 0099 3A       		.uleb128 0x3a
 506 009a 0B       		.uleb128 0xb
 507 009b 3B       		.uleb128 0x3b
 508 009c 05       		.uleb128 0x5
 509 009d 49       		.uleb128 0x49
 510 009e 13       		.uleb128 0x13
 511 009f 38       		.uleb128 0x38
 512 00a0 0B       		.uleb128 0xb
 513 00a1 00       		.byte	0
 514 00a2 00       		.byte	0
 515 00a3 0E       		.uleb128 0xe
 516 00a4 2E       		.uleb128 0x2e
 517 00a5 00       		.byte	0
 518 00a6 3F       		.uleb128 0x3f
 519 00a7 19       		.uleb128 0x19
 520 00a8 03       		.uleb128 0x3
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 23


 521 00a9 0E       		.uleb128 0xe
 522 00aa 3A       		.uleb128 0x3a
 523 00ab 0B       		.uleb128 0xb
 524 00ac 3B       		.uleb128 0x3b
 525 00ad 0B       		.uleb128 0xb
 526 00ae 27       		.uleb128 0x27
 527 00af 19       		.uleb128 0x19
 528 00b0 11       		.uleb128 0x11
 529 00b1 01       		.uleb128 0x1
 530 00b2 12       		.uleb128 0x12
 531 00b3 06       		.uleb128 0x6
 532 00b4 40       		.uleb128 0x40
 533 00b5 18       		.uleb128 0x18
 534 00b6 9742     		.uleb128 0x2117
 535 00b8 19       		.uleb128 0x19
 536 00b9 00       		.byte	0
 537 00ba 00       		.byte	0
 538 00bb 0F       		.uleb128 0xf
 539 00bc 2E       		.uleb128 0x2e
 540 00bd 01       		.byte	0x1
 541 00be 3F       		.uleb128 0x3f
 542 00bf 19       		.uleb128 0x19
 543 00c0 03       		.uleb128 0x3
 544 00c1 0E       		.uleb128 0xe
 545 00c2 3A       		.uleb128 0x3a
 546 00c3 0B       		.uleb128 0xb
 547 00c4 3B       		.uleb128 0x3b
 548 00c5 05       		.uleb128 0x5
 549 00c6 27       		.uleb128 0x27
 550 00c7 19       		.uleb128 0x19
 551 00c8 11       		.uleb128 0x11
 552 00c9 01       		.uleb128 0x1
 553 00ca 12       		.uleb128 0x12
 554 00cb 06       		.uleb128 0x6
 555 00cc 40       		.uleb128 0x40
 556 00cd 18       		.uleb128 0x18
 557 00ce 9742     		.uleb128 0x2117
 558 00d0 19       		.uleb128 0x19
 559 00d1 01       		.uleb128 0x1
 560 00d2 13       		.uleb128 0x13
 561 00d3 00       		.byte	0
 562 00d4 00       		.byte	0
 563 00d5 10       		.uleb128 0x10
 564 00d6 898201   		.uleb128 0x4109
 565 00d9 00       		.byte	0
 566 00da 11       		.uleb128 0x11
 567 00db 01       		.uleb128 0x1
 568 00dc 31       		.uleb128 0x31
 569 00dd 13       		.uleb128 0x13
 570 00de 00       		.byte	0
 571 00df 00       		.byte	0
 572 00e0 11       		.uleb128 0x11
 573 00e1 34       		.uleb128 0x34
 574 00e2 00       		.byte	0
 575 00e3 03       		.uleb128 0x3
 576 00e4 0E       		.uleb128 0xe
 577 00e5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 24


 578 00e6 0B       		.uleb128 0xb
 579 00e7 3B       		.uleb128 0x3b
 580 00e8 0B       		.uleb128 0xb
 581 00e9 49       		.uleb128 0x49
 582 00ea 13       		.uleb128 0x13
 583 00eb 3F       		.uleb128 0x3f
 584 00ec 19       		.uleb128 0x19
 585 00ed 3C       		.uleb128 0x3c
 586 00ee 19       		.uleb128 0x19
 587 00ef 00       		.byte	0
 588 00f0 00       		.byte	0
 589 00f1 12       		.uleb128 0x12
 590 00f2 2E       		.uleb128 0x2e
 591 00f3 00       		.byte	0
 592 00f4 3F       		.uleb128 0x3f
 593 00f5 19       		.uleb128 0x19
 594 00f6 03       		.uleb128 0x3
 595 00f7 0E       		.uleb128 0xe
 596 00f8 3A       		.uleb128 0x3a
 597 00f9 0B       		.uleb128 0xb
 598 00fa 3B       		.uleb128 0x3b
 599 00fb 0B       		.uleb128 0xb
 600 00fc 27       		.uleb128 0x27
 601 00fd 19       		.uleb128 0x19
 602 00fe 3C       		.uleb128 0x3c
 603 00ff 19       		.uleb128 0x19
 604 0100 00       		.byte	0
 605 0101 00       		.byte	0
 606 0102 00       		.byte	0
 607              		.section	.debug_aranges,"",%progbits
 608 0000 24000000 		.4byte	0x24
 609 0004 0200     		.2byte	0x2
 610 0006 00000000 		.4byte	.Ldebug_info0
 611 000a 04       		.byte	0x4
 612 000b 00       		.byte	0
 613 000c 0000     		.2byte	0
 614 000e 0000     		.2byte	0
 615 0010 00000000 		.4byte	.LFB0
 616 0014 30000000 		.4byte	.LFE0-.LFB0
 617 0018 00000000 		.4byte	.LFB1
 618 001c 08000000 		.4byte	.LFE1-.LFB1
 619 0020 00000000 		.4byte	0
 620 0024 00000000 		.4byte	0
 621              		.section	.debug_ranges,"",%progbits
 622              	.Ldebug_ranges0:
 623 0000 00000000 		.4byte	.LFB0
 624 0004 30000000 		.4byte	.LFE0
 625 0008 00000000 		.4byte	.LFB1
 626 000c 08000000 		.4byte	.LFE1
 627 0010 00000000 		.4byte	0
 628 0014 00000000 		.4byte	0
 629              		.section	.debug_line,"",%progbits
 630              	.Ldebug_line0:
 631 0000 95000000 		.section	.debug_str,"MS",%progbits,1
 631      02006200 
 631      00000201 
 631      FB0E0D00 
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 25


 631      01010101 
 632              	.LASF38:
 633 0000 55534246 		.ascii	"USBFS_ReInitComponent\000"
 633      535F5265 
 633      496E6974 
 633      436F6D70 
 633      6F6E656E 
 634              	.LASF28:
 635 0016 65704372 		.ascii	"epCr0\000"
 635      3000
 636              	.LASF11:
 637 001c 666C6F61 		.ascii	"float\000"
 637      7400
 638              	.LASF3:
 639 0022 73686F72 		.ascii	"short unsigned int\000"
 639      7420756E 
 639      7369676E 
 639      65642069 
 639      6E7400
 640              	.LASF33:
 641 0035 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBFS_episr.c\000"
 641      72617465 
 641      645F536F 
 641      75726365 
 641      5C50536F 
 642              	.LASF25:
 643 005a 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 643      4246535F 
 643      45505F43 
 643      544C5F42 
 643      4C4F434B 
 644              	.LASF36:
 645 006f 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 645      535F4255 
 645      535F5245 
 645      5345545F 
 645      49535200 
 646              	.LASF26:
 647 0083 6570436E 		.ascii	"epCnt0\000"
 647      743000
 648              	.LASF27:
 649 008a 6570436E 		.ascii	"epCnt1\000"
 649      743100
 650              	.LASF19:
 651 0091 6570546F 		.ascii	"epToggle\000"
 651      67676C65 
 651      00
 652              	.LASF1:
 653 009a 756E7369 		.ascii	"unsigned char\000"
 653      676E6564 
 653      20636861 
 653      7200
 654              	.LASF14:
 655 00a8 72656738 		.ascii	"reg8\000"
 655      00
 656              	.LASF17:
 657 00ad 61706945 		.ascii	"apiEpState\000"
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 26


 657      70537461 
 657      746500
 658              	.LASF5:
 659 00b8 6C6F6E67 		.ascii	"long unsigned int\000"
 659      20756E73 
 659      69676E65 
 659      6420696E 
 659      7400
 660              	.LASF20:
 661 00ca 61646472 		.ascii	"addr\000"
 661      00
 662              	.LASF30:
 663 00cf 73696545 		.ascii	"sieEp\000"
 663      7000
 664              	.LASF37:
 665 00d5 55534246 		.ascii	"USBFS_EP\000"
 665      535F4550 
 665      00
 666              	.LASF12:
 667 00de 646F7562 		.ascii	"double\000"
 667      6C6500
 668              	.LASF29:
 669 00e5 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 669      535F7369 
 669      655F6570 
 669      5F737472 
 669      75637400 
 670              	.LASF22:
 671 00f9 62756666 		.ascii	"buffOffset\000"
 671      4F666673 
 671      657400
 672              	.LASF23:
 673 0104 62756666 		.ascii	"bufferSize\000"
 673      65725369 
 673      7A6500
 674              	.LASF10:
 675 010f 75696E74 		.ascii	"uint16\000"
 675      313600
 676              	.LASF31:
 677 0116 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 677      535F7369 
 677      655F6570 
 677      735F7374 
 677      72756374 
 678              	.LASF32:
 679 012b 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 679      4320342E 
 679      392E3320 
 679      32303135 
 679      30333033 
 680 015e 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 680      20726576 
 680      6973696F 
 680      6E203232 
 680      31323230 
 681 0191 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 681      66756E63 
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 27


 681      74696F6E 
 681      2D736563 
 681      74696F6E 
 682              	.LASF8:
 683 01b9 756E7369 		.ascii	"unsigned int\000"
 683      676E6564 
 683      20696E74 
 683      00
 684              	.LASF7:
 685 01c6 6C6F6E67 		.ascii	"long long unsigned int\000"
 685      206C6F6E 
 685      6720756E 
 685      7369676E 
 685      65642069 
 686              	.LASF18:
 687 01dd 68774570 		.ascii	"hwEpState\000"
 687      53746174 
 687      6500
 688              	.LASF35:
 689 01e7 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 689      535F4550 
 689      5F315F49 
 689      535200
 690              	.LASF15:
 691 01f6 73697A65 		.ascii	"sizetype\000"
 691      74797065 
 691      00
 692              	.LASF16:
 693 01ff 61747472 		.ascii	"attrib\000"
 693      696200
 694              	.LASF21:
 695 0206 65704D6F 		.ascii	"epMode\000"
 695      646500
 696              	.LASF6:
 697 020d 6C6F6E67 		.ascii	"long long int\000"
 697      206C6F6E 
 697      6720696E 
 697      7400
 698              	.LASF13:
 699 021b 63686172 		.ascii	"char\000"
 699      00
 700              	.LASF34:
 701 0220 433A5C55 		.ascii	"C:\\Users\\sajibu\\Desktop\\PSoC\\Cualquiera\\Desig"
 701      73657273 
 701      5C73616A 
 701      6962755C 
 701      4465736B 
 702 024d 6E30312E 		.ascii	"n01.cydsn\000"
 702      63796473 
 702      6E00
 703              	.LASF2:
 704 0257 73686F72 		.ascii	"short int\000"
 704      7420696E 
 704      7400
 705              	.LASF9:
 706 0261 75696E74 		.ascii	"uint8\000"
 706      3800
ARM GAS  C:\Users\sajibu\AppData\Local\Temp\ccZEfnq8.s 			page 28


 707              	.LASF24:
 708 0267 696E7465 		.ascii	"interface\000"
 708      72666163 
 708      6500
 709              	.LASF4:
 710 0271 6C6F6E67 		.ascii	"long int\000"
 710      20696E74 
 710      00
 711              	.LASF0:
 712 027a 7369676E 		.ascii	"signed char\000"
 712      65642063 
 712      68617200 
 713              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
